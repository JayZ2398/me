{"version":3,"sources":["media/mePortrait.jpg","App.tsx","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","palette","primary","lightBlue","secondary","orange","useStyles","makeStyles","root","maxWidth","media","App","classes","className","ThemeProvider","Typography","variant","Grid","container","direction","justify","item","xs","List","ListItem","ListItemIcon","color","ListItemText","src","mePortrait","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAAe,MAA0B,uC,0DCgBnCA,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAASC,IACTC,UAAWC,OAKTC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,OAEZC,MAAO,CACLD,SAAU,UA+DCE,MA3Df,WACE,IAAMC,EAAUN,IAEhB,OACE,qBAAKO,UAAU,MAAf,SACE,cAACC,EAAA,EAAD,CAAef,MAAOA,EAAtB,SAEE,yBAAQc,UAAU,aAAlB,UACE,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAApB,yBACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,sBACA,eAACC,EAAA,EAAD,CACEC,WAAS,EACTL,UAAWD,EAAQJ,KACnBW,UAAU,MACVC,QAAQ,eAJV,UAME,eAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,UACE,cAACP,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,iHAGA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,SACE,eAACO,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAc,cAAC,IAAD,CAASC,MAAM,cAC7B,cAACC,EAAA,EAAD,2BAIF,eAACH,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAc,cAAC,IAAD,CAAcC,MAAM,cAClC,cAACC,EAAA,EAAD,qCAIF,eAACH,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAc,cAAC,IAAD,CAAYC,MAAM,cAChC,cAACC,EAAA,EAAD,wCAOR,cAACV,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACE,qBACET,UAAWD,EAAQF,MACnBkB,IAAKC,EACLC,IAAI,+BCtELC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.97742dc0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mePortrait.d5f9b975.jpg\";","import logo from './logo.svg';\nimport './App.css';\nimport { Button, Card, CardHeader, CardMedia, Grid, List, ListItem, ListItemIcon, ListItemText, Paper, Typography } from '@material-ui/core';\n// Theming\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport orange from '@material-ui/core/colors/orange';\n\n\n// Media\nimport mePortrait from './media/mePortrait.jpg';\nimport WebIcon from '@material-ui/icons/Web';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport CameraIcon from '@material-ui/icons/Camera';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: lightBlue,\n    secondary: orange,\n  },\n});\n\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: '80%',\n  },\n  media: {\n    maxWidth: '100%',\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n\n        <header className=\"App-header\">\n          <Typography variant='h1'>Jack Zezula</Typography>\n          <Typography variant='h2'>About me</Typography>\n          <Grid\n            container\n            className={classes.root}\n            direction='row'\n            justify='space-around'\n          >\n            <Grid item xs={5}>\n              <Typography variant='h3'>Direction</Typography>\n              <Typography variant='body1'>Computer science and pure math undergraduate with a passion for robotic automation for social good.\n            </Typography>\n\n              <Typography variant='h3'>Interests</Typography>\n              <Typography variant='body1'>\n                <List>\n                  <ListItem>\n                    <ListItemIcon><WebIcon color='primary' /></ListItemIcon>\n                    <ListItemText>\n                      Front end\n                  </ListItemText>\n                  </ListItem>\n                  <ListItem>\n                    <ListItemIcon><SecurityIcon color='primary' /></ListItemIcon>\n                    <ListItemText>\n                      Formal verification\n                  </ListItemText>\n                  </ListItem>\n                  <ListItem>\n                    <ListItemIcon><CameraIcon color='primary' /></ListItemIcon>\n                    <ListItemText>\n                      Robots and AGI\n                  </ListItemText>\n                  </ListItem>\n                </List>\n              </Typography>\n            </Grid>\n            <Grid item xs={5}>\n              <img\n                className={classes.media}\n                src={mePortrait}\n                alt=\"Me and a mlem\"\n              />\n            </Grid>\n          </Grid>\n        </header>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}